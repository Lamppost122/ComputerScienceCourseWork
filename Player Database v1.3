#-------------------------------------------------------------------------------
# Name: Player database
# Purpose:
#
# Author:      Connor Hamilton
#
# Created:     31/08/2018
# Copyright:   (c) Connor Hamilton 2018
# Licence:     <your licence>
#-------------------------------------------------------------------------------
import re
from datetime import *
import io
import sys
import os.path

playerDatabase = 'playerDatabase.txt'


class player:
    def __init__(self,playerID,firstName,lastName,Email,phoneNumber,Address,Postcode,dateOfBirth,dateOfJoining):
        self.playerID = self.getPlayerID()
        self.firstName = self.getFirstName()
        self.lastName = self.getLastName()
        self.Email = self.getEmail()
        self.phoneNumber = self.getPhoneNumber()
        self.Address = self.getAddress()
        self.Postcode = self.getPostcode()
        self.dateOfBirth = self.getDateOfBirth()
        self.dateOfJoining = self.getDateOfJoining()

    def getPlayerID(self):
        self.playerID = sum(1 for line in open("playerDatabase.txt")) + 1
        self.playerID = "{:05d}".format(self.playerID)
        self.playerID = str(self.playerID)
        return self.playerID


    def getFirstName(self):
        self.firstName = raw_input("Players first name: ")
        if len(self.firstName) > 30 :
            self.getFirstName()
        self.firstName = "{:<30}".format(self.firstName)
        self.firstName.lower()
        return self.firstName

    def getLastName(self):
        self.lastName = raw_input("Players last name: ")
        if len(self.lastName) > 30 :
            playerDatabase.getLastName()
        self.lastName = "{:<30}".format(self.lastName)
        self.lastName.lower()
        return self.lastName

    def getEmail(self):
        self.Email = raw_input("Players Email: ")
        if len(self.Email) > 30:
            self.getEmail()
##        if re.match(r"^[A-Za-z0-9\.\+_-]+@[A-Za-z0-9\._-]+\.[a-zA-Z]*$", self.Email) != False:
##            self.getEmail()
        self.Email = "{:<30}".format(self.Email)
        return self.Email

    def getPhoneNumber(self):
        self.PhoneNumber = raw_input("Players Phone Number: ")
##        if len(self.PhoneNumber) != 11:
##            self.getPhoneNumber()
##        if self.PhoneNumber.isdigit() == False:
##            self.getPhoneNumber()
        return self.PhoneNumber

    def getAddress(self):
        self.Address = raw_input("Players Address: ")
        if len(self.Address) > 30:
            self.getAddress()
        self.Address = "{:<30}".format(self.Address)
        return self.Address

    def getPostcode(self):
        self.Postcode = raw_input("Players Postcode: ")
##        if re.match("^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$)",Postcode) == False:
##            playerDatabase.getPostcode()
        self.Postcode.replace(" ","")
        return self.Postcode

    def getDateOfBirth(self):
        self.DateOfBirth = raw_input("Players Date Of Birth: ")
##        try:
##            datetime.datetime.strptime(inputDob, '%d/%m/%Y')
##        except ValueError:
##            playerDatabase.getDateOfBirth()
        return self.DateOfBirth

    def getDateOfJoining(self):
        self.DateOfJoining = str(datetime.now())
        return self.DateOfJoining


    def getPlayerData(self):
        playerData = self.playerID + self.firstName + self.lastName + self.Email+self.phoneNumber+self.Address+self.Postcode+self.dateOfBirth+self.dateOfJoining
        return playerData


class playerDatabase:

    def init__Database():
        database = open(playerDatabase,'w+')
        database.close()

    def addPlayer(self):
        p1 = player("","","","","","","","","")
        database = open("playerDatabase.txt",'a')
        database.write(p1.getPlayerData() + "\n")
        database.close()

    def searchByFirstName(self):
        foundPlayers=[]
        database = open('playerDatabase.txt','r')
        find = raw_input("Search for: ")
        searchlines = database.readlines()
        for i, line in enumerate(searchlines):
            line = line[5:35]
            if find in line:
                for l in searchlines[i:i+1]:
                    foundPlayers.append(l),
        for j in foundPlayers:
            message = j[5:65].split()
            message = message[0].capitalize() + " "+ message[1].capitalize()
            playerCheck = raw_input("Is "+ message +" the Player your looking for ? (y/n)") # will need to change when gui is added
            if playerCheck =="y":
                playerID = j[0:5]
                firstName=j[5:35]
                lastName= j[35:65]
                Email= j[65:95]
                phoneNumber=j[95:106]
                Address=j[106:136]
                Postcode=j[136:144]
                dateOfBirth=j[144:154]
                dateOfJoining=j[154:]
                return playerID+firstName+lastName+Email+phoneNumber+Address+Postcode+dateOfBirth+dateOfJoining
                break
        database.close()



    def searchByLastName(self):
        database = open(playerDatabase,'r')
        find = raw_input("Search for: ")
        searchlines = database.readlines()
        for i, line in enumerate(searchlines):
            line = line[35:65]
            if find in line:
                for l in searchlines[i:i+1]:
                    print l,
        playerDatabase.close()

class team(player,playerDatabase):
    def __init__(self,player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11,player12,player13,player14,player15,player16):
        self.player1 = player
        self.player2 = player
        self.player3 = player
        self.player4 = player
        self.player5 = player
        self.player6 = player
        self.player7 = player
        self.player8 = player
        self.player9 = player
        self.player10 = player
        self.player11 = player
        self.player12 = player
        self.player13 = player
        self.player14 = player
        self.player15 = player
        self.player16 = player

    def createTeam(self):
        teamNumber = 1
        while True:
            if os.path.isfile("team"+str(teamNumber)+".txt") == True:
                 int(teamNumber)
                 teamNumber += 1
            else:
                break
        teamFile = open("team"+str(teamNumber)+".txt",'w+')
        for i in range(16):
            teamFile.write(str(self.searchByFirstName()))
        teamFile.close()
    def addPlayerToTeam(self):
        teamNumber = raw_input("What team do add a player to ?")
        teamFile = open("team"+str(teamNumber)+".txt",'a+')
        teamFile.write(str(self.searchByFirstName()))
        teamFile.close()

    def removePlayerFromTeam(self):
        teamNumber = raw_input("What team do you want to edit ?")
        teamFile = open("team"+str(teamNumber)+".txt",'r')
        find = raw_input("Who do you want to remove ? ")
        searchlines = teamFile.readlines()
        foundPlayers = []
        lineCount = 0
        for i, line in enumerate(searchlines):
            line = line[5:35]

            if find in line:
                for l in searchlines[i:i+1]:
                    foundPlayers.append(l),
        for j in foundPlayers:
            lineCount +=1
            message = j[5:65].split()
            message = message[0].capitalize() + " "+ message[1].capitalize()
            playerCheck = raw_input("Is "+ message +" the Player your looking for ? (y/n)") # will need to change when gui is added
            if playerCheck =="y":
                teamTemp = open("teamTemp.txt",'w+')
                subLineCount =0
                for j, line in enumerate(searchlines):
                    subLineCount += 1
                    if lineCount != subLineCount:
                        print(line)
                        print(lineCount)
                        print(subLineCount)
                        teamTemp.write(str(line))
                teamTemp.close()
                break
        teamFile = open("team"+str(teamNumber)+".txt",'w')
        teamTemp = open("teamTemp.txt","r")
        for line in teamTemp:
            teamFile.write(line)
        teamTemp.close()
        teamFile.close()
        os.remove("teamTemp.txt")

    def replacePlayerInTeam():
        teamNumber = raw_input("What team do you want to edit?")
        teamFile = open("team"+str(teamNumber)+".txt",'a+')
        teamFile.write(str(self.searchByFirstName()))
        teamFile.close()

        teamFile = open("team"+str(teamNumber)+".txt",'r')
        find = raw_input("Who do you want to remove ? ")
        searchlines = teamFile.readlines()
        foundPlayers = []
        lineCount = 0
        for i, line in enumerate(searchlines):
            line = line[5:35]

            if find in line:
                for l in searchlines[i:i+1]:
                    foundPlayers.append(l),
        for j in foundPlayers:
            lineCount +=1
            message = j[5:65].split()
            message = message[0].capitalize() + " "+ message[1].capitalize()
            playerCheck = raw_input("Is "+ message +" the Player your looking for ? (y/n)") # will need to change when gui is added
            if playerCheck =="y":
                teamTemp = open("teamTemp.txt",'w+')
                subLineCount =0
                for j, line in enumerate(searchlines):
                    subLineCount += 1
                    if lineCount != subLineCount:
                        print(line)
                        print(lineCount)
                        print(subLineCount)
                        teamTemp.write(str(line))
                teamTemp.close()
                break
        teamFile = open("team"+str(teamNumber)+".txt",'w')
        teamTemp = open("teamTemp.txt","r")
        for line in teamTemp:
            teamFile.write(line)
        teamTemp.close()
        teamFile.close()
        os.remove("teamTemp.txt")

















x = team("","","","","","","","","","","","","","","","")

##x.addPlayerToTeam()
##x.addPlayerToTeam()
##x.addPlayerToTeam()
x.removePlayerFromTeam()


















